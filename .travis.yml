sudo: required
# 관리자 권한 갖기

language: generic
# 언어(플랫폼) 선택

services:
  - docker
# 도커 환경 구성

# 스크립트를 실행할 환경 구성. 여기서는 dockerfile을 통해 image build
before_install:
  - echo "start creating an image with dockerfile"
  - docker build -t hyoukim/docker-react-app -f Dockerfile.dev .
  # 도커명령어    build파일명                 dockerfile 지정  경로지정

# 실행할 스크립트
script:
  - docker run -e CI=true hyoukim/docker-react-app npm run test -- --coverage

# 스크립트 성공 후
after_success:
  - echo "TEST SUCCESS"




# 배포에 관한 설정
deploy:
  
  # 외부 서비스 표시(s3, elasticbeanstalk, firebase ...)
  provider: elasticbeanstalk
  
  # 현재 사용하고 있는 AWS의 서비스가 위치한 물리적 장소. AWS의 URL 참조
  region: "ap-northeast-2"
  
  # 생성된 AWS 어플리케이션의 이름
  app: "ReactAWS"
  
  # 생성된 AWS 환경의 이름
  env: "Reactaws-env"

  # elasticbeanstalk를 위한 s3 bucket 이름. Travis CI에서 가지고 있는 파일을 압축해서 s3로 먼저 보내고 s3에서 elastik으로 보낸다
  bucket_name: "elasticbeanstalk-ap-northeast-2-116047828143"
  
  # 생성된 AWS 어플리케이션의 이름과 동일
  bucket_path: "ReactAWS"

  # github 어떤 브랜치에 업로드 될 때 deploy를 수행할 것인지
  on:
    branch: master

  # $name으로 travis ci 저장소의 환경변수 값 가져와서 사용. 보여주지 않아야되는 키 값 등을 가릴 때 유효
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_ACCESS_KEY